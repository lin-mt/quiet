/*
 * Copyright 2020 lin-mt@outlook.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.ewerk.gradle.plugins.querydsl'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    compile project(path: ':quiet-common:quiet-validation', configuration: 'default')
    compile 'com.querydsl:querydsl-jpa'
    compile 'com.querydsl:querydsl-apt'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-data-redis'
    compile 'org.springframework.cloud:spring-cloud-starter-oauth2'
    compile 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config'
    compile 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
}

jar.enabled(true)

def queryDslSourceDirectory = 'src/main/generated'

querydsl {
    jpa = true
    querydslSourcesDir = queryDslSourceDirectory
}

sourceSets {
    //noinspection GroovyAssignabilityCheck
    main {
        java {
            srcDir queryDslSourceDirectory
        }
    }
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}