/*
 * Copyright 2021 lin-mt@outlook.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    ext {
        versions = [
                'jacksonDatabind'                  : '2.12.5',
                'queryDsl'                         : '5.0.0',
                'lombok'                           : '1.18.20',
                'mapstruct'                        : '1.4.2.Final',
                'springCloud'                      : '2020.0.3',
                'springCloudAlibaba'               : '2021.1',
                'springSecurityOauth2'             : '2.5.1.RELEASE',
                'redissonSpringDataStarter'        : '3.16.2',
                'springSecurityOauth2Autoconfigure': '2.5.2',
                'googleGuava'                      : '30.1.1-jre',
                'apacheCommonsLang3'               : '3.12.0',
                'apacheCommonsCollections4'        : '4.4',
                'javaxPersistenceHibernateJpa21api': '1.0.2.Final',
                'javaxAnnotationApi'               : '1.3.2'
        ]

        deps = [
                'mysql'                            : 'mysql:mysql-connector-java',
                'lombok'                           : "org.projectlombok:lombok:${versions.lombok}",
                'mapstruct'                        : "org.mapstruct:mapstruct:${versions.mapstruct}",
                'mapstructProcessor'               : "org.mapstruct:mapstruct-processor:${versions.mapstruct}",
                'jacksonDatabind'                  : "com.fasterxml.jackson.core:jackson-databind:${versions.jacksonDatabind}",
                'queryDslCore'                     : "com.querydsl:querydsl-core:${versions.queryDsl}",
                'queryDslJpa'                      : "com.querydsl:querydsl-jpa:${versions.queryDsl}",
                'queryDslSql'                      : "com.querydsl:querydsl-sql:${versions.queryDsl}",
                'queryDslApt'                      : "com.querydsl:querydsl-apt:${versions.queryDsl}:jpa",
                'springSecurityOauth2'             : "org.springframework.security.oauth:spring-security-oauth2:${versions.springSecurityOauth2}",
                'springSecurityOauth2Autoconfigure': "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${versions.springSecurityOauth2Autoconfigure}",
                'googleGuava'                      : "com.google.guava:guava:${versions.googleGuava}",
                'apacheCommonsLang3'               : "org.apache.commons:commons-lang3:${versions.apacheCommonsLang3}",
                'apacheCommonsCollections4'        : "org.apache.commons:commons-collections4:${versions.apacheCommonsCollections4}",
                'javaxPersistenceHibernateJpa21api': "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${versions.javaxPersistenceHibernateJpa21api}",
                'javaxAnnotationApi'               : "javax.annotation:javax.annotation-api:${versions.javaxAnnotationApi}",
                'redissonSpringBootStarter'        : "org.redisson:redisson-spring-boot-starter:${versions.redissonSpringDataStarter}",
        ]

        springBootDeps = [
                'configurationProcessor': 'org.springframework.boot:spring-boot-configuration-processor',
        ]

        springBootStarter = [
                'test'      : 'org.springframework.boot:spring-boot-starter-test',
                'web'       : 'org.springframework.boot:spring-boot-starter-web',
                'undertow'  : 'org.springframework.boot:spring-boot-starter-undertow',
                'actuator'  : 'org.springframework.boot:spring-boot-starter-actuator',
                'dataJpa'   : 'org.springframework.boot:spring-boot-starter-data-jpa',
                'dataRedis' : 'org.springframework.boot:spring-boot-starter-data-redis',
                'validation': 'org.springframework.boot:spring-boot-starter-validation',
        ]

        springCloud = [
                'loadbalancer': 'org.springframework.cloud:spring-cloud-starter-loadbalancer',
                'gateway'     : 'org.springframework.cloud:spring-cloud-starter-gateway',
        ]

        springCloudAlibaba = [
                'dubbo'         : 'com.alibaba.cloud:spring-cloud-starter-dubbo',
                'nacosConfig'   : 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-config',
                'nacosDiscovery': 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
        ]
    }
}

plugins {
    id "org.springframework.boot" version "2.5.4"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}
allprojects {
    group "com.gitee.lin-mt"
    version "0.0.1"
}

repositories {
    maven { url "https://maven.aliyun.com/repository/public/" }
    maven { url "https://maven.aliyun.com/repository/spring/" }
    mavenLocal()
    mavenCentral()
}

subprojects {

    apply plugin: "java-library"
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"

    jar {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    repositories {
        maven { url "https://maven.aliyun.com/repository/public/" }
        maven { url "https://maven.aliyun.com/repository/spring/" }
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        api deps.googleGuava
        api deps.apacheCommonsLang3
        api deps.apacheCommonsCollections4
        testImplementation springBootStarter.test
    }

    test {
        useJUnitPlatform()
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${versions.springCloudAlibaba}"
        }
    }
}
